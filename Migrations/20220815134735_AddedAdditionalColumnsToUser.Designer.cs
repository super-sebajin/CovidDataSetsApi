// <auto-generated />
using System;
using CovidDataSetsApi.DataAccessLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CovidReportsApi.Migrations
{
    [DbContext(typeof(CovidDataSetsDbContext))]
    [Migration("20220815134735_AddedAdditionalColumnsToUser")]
    partial class AddedAdditionalColumnsToUser
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CovidDataSetsApi.DataAccessLayer.CovidCasesOverTimeUsa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<int>("CountConfirmed")
                        .HasColumnType("int")
                        .HasColumnName("CountConfirmed");

                    b.Property<int>("CountDeath")
                        .HasColumnType("int")
                        .HasColumnName("CountDeath");

                    b.Property<int>("CountRecovered")
                        .HasColumnType("int")
                        .HasColumnName("CountRecovered");

                    b.Property<Guid>("CovidDataSetId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateStamp")
                        .HasColumnType("datetime2")
                        .HasColumnName("DateStamp");

                    b.HasKey("Id");

                    b.HasIndex("CovidDataSetId");

                    b.ToTable("CovidCasesOverTimeUsa");
                });

            modelBuilder.Entity("CovidDataSetsApi.DataAccessLayer.CovidDataSets", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("DataSetName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("DataSetName");

                    b.Property<string>("DataSetProviderLongName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DataSetProviderLongName");

                    b.Property<string>("DataSetProviderShortName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DataSetProviderShortName");

                    b.Property<string>("DataSetPublicUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DataSetPublicUrl");

                    b.Property<string>("DataSetPublicUrlHttpMethod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DataSetPublicUrlHttpMethod");

                    b.HasKey("Id");

                    b.ToTable("CovidDataSets");
                });

            modelBuilder.Entity("CovidDataSetsApi.DataAccessLayer.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Password");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Username");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("CovidDataSetsApi.DataAccessLayer.CovidCasesOverTimeUsa", b =>
                {
                    b.HasOne("CovidDataSetsApi.DataAccessLayer.CovidDataSets", "CovidDataSet")
                        .WithMany("CovidCasesOverTimesUsa")
                        .HasForeignKey("CovidDataSetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CovidDataSet");
                });

            modelBuilder.Entity("CovidDataSetsApi.DataAccessLayer.CovidDataSets", b =>
                {
                    b.Navigation("CovidCasesOverTimesUsa");
                });
#pragma warning restore 612, 618
        }
    }
}
